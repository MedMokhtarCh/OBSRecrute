services:
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "4001:4001"
    restart: always

    volumes:
      - ./services/user-service:/app
    command: ["npm", "run", "dev"]
    depends_on:
      - mongo
      - rabbitmq

  application-service:
    build:
      context: ./services/application-service
      dockerfile: Dockerfile
    container_name: application-service
    ports:
      - "4003:4003"
    restart: always
    volumes:
      - ./services/application-service:/app
    
    command: ["npm", "run", "dev"]
    depends_on:
      - mongo
      - rabbitmq

  job-service:
    build:
      context: ./services/job-service
      dockerfile: Dockerfile
    container_name: job-service
    ports:
      - "4002:4002"
    restart: always
    volumes:
      - ./services/job-service:/app
    
    command: ["npm", "run", "dev"]
    depends_on:
      - mongo
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: always

volumes:
  rabbitmq_data:
  mongo_data:
